# -*- coding: utf-8 -*-
"""Lee_IA4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J5GspqFl7sfNEsZsHTbPAWZgCoIs61Uc
"""

import requests

# PART 1


# Write a Python function that takes the parameter url and returns a list of reviews.
URL1 = requests.get("https://www.rottentomatoes.com/m/black_adam/reviews")
html = URL1.text

# Extract first page of review
from bs4 import BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')
review = soup.findAll('div',{'class':"the_review"}) 

# Extract text from first page of review
black_adam_text =[]

for i in review:
  black_adam_text.append(i.text)
  print(i.text)

# Write a Python function that takes the parameter url and returns a list of reviews.
URL2 = requests.get("https://www.rottentomatoes.com/m/the_good_nurse/reviews")
html2 = URL2.text

# Extract second page of review
soup = BeautifulSoup(html2, 'html.parser')
review2 = soup.findAll('div',{'class':"the_review"}) 

# Extract text from second page of review
the_good_nurse_text =[]

for i in review2:
  the_good_nurse_text.append(i.text)
  print(i.text)

# Write a Python function that takes the parameter url and returns a list of reviews.
myURL3 = requests.get("https://www.rottentomatoes.com/m/minions_the_rise_of_gru/reviews")
html3 = myURL3.text

# Extract third page of review
soup = BeautifulSoup(html3, 'html.parser')
review3 = soup.findAll('div',{'class':"the_review"}) 

# Extract text from third page of review
minions_text =[]

for i in review3:
  minions_text.append(i.text)
  print(i.text)

# PART 2

# Load the positive and negative words using csv.reader into python. 
import csv 

fp = open('positive-words.csv', 'r') 
cp = csv.reader(fp) 

fn = open('negative-words.csv', 'r') 
cn = csv.reader(fn)

# Functions (numPositiveWords, numNegativeWords, sentimental score) that returns a total number of positive and negative words in the scraped review
def numPositiveWords(text): 
    fp = open('positive-words.csv', 'r') 
    cp = csv.reader(fp) 
 
    count = 0 
    for word in cp: 
        if word[0] in text: 
            count +=1 
    return count 


def numNegativeWords(text): 
    fn = open('negative-words.csv', 'r') 
    cn = csv.reader(fn) 
     
    count = 0 
    for word in cn: 
        if word[0] in text: 
            count +=1 
    return count 


def sentimentScore(pos, neg, tot): 
    return (pos-neg)/tot

# Store the value of the sentiment score for each review in a list
  # e.g if black adam had 4 reviews with sentiment scores 0.2, 0.8, 0.4, and 0.5, it would be [0.2, 0.8, 0.4, 0.5]
  # Create three lists that contain all of the sentiment scores for each movie
slist = []

for rev in black_adam_text:
  n = numNegativeWords(rev) 
  p = numPositiveWords(rev) 
  t = len(rev.split(' ')) 
  s = sentimentScore(p,n,t) 
  slist.append(s)
print(f"positive word:{p}, negative words:{n}, sentiment score:{slist}") 
# Average sentimental score from Black Adams
avg = sum(slist)/len(slist) 
print("Black Adam Average Sentimental Score:", avg)



slist2 = []

for rev in the_good_nurse_text:
  n = numNegativeWords(rev) 
  p = numPositiveWords(rev) 
  t = len(rev.split(' ')) 
  s = sentimentScore(p,n,t) 
  slist2.append(s)
print(f"positive word:{p}, negative words:{n}, sentiment score:{slist2}") 

# Average sentimental score from The Good Nurse
avg2 = sum(slist2)/len(slist2) 
print("The Good Nurse Average Sentimental Score:", avg2)



slist3 = []

for rev in minions_text:
  n = numNegativeWords(rev) 
  p = numPositiveWords(rev) 
  t = len(rev.split(' ')) 
  s = sentimentScore(p,n,t) 
  slist3.append(s)
print(f"positive word:{p}, negative words:{n}, sentiment score:{slist3}") 

# Average sentimental score from Minions
avg3 = sum(slist3)/len(slist3) 
print("Minions The Rise of Gru:", avg3)

# Print the movie name that has highest average sentiment score
largest_score = avg3
for i in [avg, avg2, avg3]:
  if i > largest_score:
    largest_num = i
print("Minions The Rise of Gru:", largest_score)